var k=Object.defineProperty,C=Object.defineProperties;var w=Object.getOwnPropertyDescriptors;var g=Object.getOwnPropertySymbols;var D=Object.prototype.hasOwnProperty,N=Object.prototype.propertyIsEnumerable;var f=(t,e,a)=>e in t?k(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a,r=(t,e)=>{for(var a in e||(e={}))D.call(e,a)&&f(t,a,e[a]);if(g)for(var a of g(e))N.call(e,a)&&f(t,a,e[a]);return t},d=(t,e)=>C(t,w(e));import{c as L,g as $,a as z,b as G,d as M}from"./createListener-4b37af6d.js";import{c as R}from"./general-84f9059a.js";import{C as i,bB as P,R as o,bh as H,bi as U}from"./vendor-202ba1b8.js";import{d as u}from"./index-1d03818a.js";import{g as W}from"./helpers-70f71db7.js";import{a7 as S,u as K,g as F,L as q,z as J,b2 as Q}from"./index-239f6385.js";import{a as X,i as y}from"./index-0ce918a4.js";import{S as Y}from"./SlotsBet.generated-3581f7c5.js";import{c as Z}from"./setup-0524d8dd.js";import{e as V}from"./index-f13ebc4a.js";import{e as tt}from"./stateless-709cdc5f.js";const p=i(20),m=i([]),b=i(!1),et=i(!1),at=i(!1);var ce=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",lines:p,rounds:m,skipRound:b,resultsPlaying:et,gameInitialized:at});const{amount:B,currency:T,lastBet:v,tab:_,xstate:h,conversion:st,amountValidationError:nt,inPlay:ot,fetching:it,disabled:rt,hotkeysEnabled:lt,modal:ct,initialState:dt}=R({});var x=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",amount:B,currency:T,lastBet:v,tab:_,xstate:h,conversion:st,amountValidationError:nt,inPlay:ot,fetching:it,disabled:rt,hotkeysEnabled:lt,modal:ct,initialState:dt});const{betHistory:ut,blockTriggers:mt,blocks:bt,currentStrategyLabel:gt,gamesLeft:ft,loadStrategy:St,saveStrategy:yt,resetState:A,allowedActions:pt,initDefaultAdvancedStrategies:Bt,initDefaultStrategies:Tt}=L(),{entry:vt,exit:_t,resetAutobetState:ht}=$(A);var j=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",betHistory:ut,blockTriggers:mt,blocks:bt,currentStrategyLabel:gt,gamesLeft:ft,loadStrategy:St,saveStrategy:yt,resetState:A,allowedActions:pt,initDefaultAdvancedStrategies:Bt,initDefaultStrategies:Tt,entry:vt,exit:_t,resetAutobetState:ht});const{assign:I}=P,E=z({initialState:{},removeDeduction:t=>{u.remove(t)},setLastBet:t=>{v.set(t)},removeActiveBet:()=>{},general:x,autobet:j}),{addBetToContext:xt,snapshotAutobetInfo:At,setInitialBettingState:jt,initAutobetDefaultStrategies:It}=E,Et=(...t)=>{E.finishGame(()=>!0)(...t)},Ot=I({bet:(t,e)=>e.bet,firstBet:(t,e)=>t.firstBet===null?e.bet:t.firstBet}),kt=t=>{const e=t.bet.state.rounds.map((a,s)=>d(r({},a),{roundIndex:s,currency:t.bet.currency,amount:t.bet.amount}));m.set(e)},Ct=()=>{I({bet:()=>null,firstBet:()=>null}),m.set([])},wt=()=>{o(b)===!1&&b.set(!0)};var Dt=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",addBetToContext:xt,snapshotAutobetInfo:At,setInitialBettingState:jt,initAutobetDefaultStrategies:It,finishGame:Et,setBaseAutobetInfo:Ot,deriveGameState:kt,resetBetState:Ct,skipRound:wt});const{config:de,requestClient:Nt}=Z({name:S.slots,slug:"slots",apiUrl:K,getSession:F,headers:{"x-lockdown-token":q}}),Lt=({variables:t})=>new Promise(async(e,a)=>{try{try{const s=await Nt(Y,t),{data:n}=s;if(n==null?void 0:n.slotsBet){const l=d(r({},n.slotsBet),{identifier:t.identifier});e(l)}else a()}catch(s){a(s)}}catch(s){a(s)}}),$t=400,zt=t=>{const e=new Date().getTime();return()=>{const a=new Date().getTime()-e,s=t?$t:400;return a>=s?0:s-a}},Gt=()=>new Promise(async(t,e)=>{const a=J[o(T)],s=Number(o(B)),n=u.generate(o(y)?{game:"slots"}:{amount:s,currency:a,game:"slots"}),l={currency:a,amount:s,lines:o(p),identifier:n};try{const c=zt(o(X)),O=await Lt({variables:l});o(y)||await Q(c()),t(O)}catch(c){u.remove(n),e(c)}});var Mt=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",mutationBet:Gt});const Rt=({blockResults:t,general:e})=>W({blockResults:t,amount:e==null?void 0:e.amount}),{mutationBet:Pt,decideOnNextBet:Ht}=G({services:r({},Mt),moduleName:S.slots,general:x,autobet:j,handler:Rt});var Ut=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",mutationBet:Pt,decideOnNextBet:Ht});const Wt={initial:"idle",id:"autobetTab",states:{idle:{},betting:{states:{base:{states:{idle:{onExit:["resetBetState"]},fetching:{on:{SUCCESS:{actions:["addBetToContext"],target:"play"}}},play:{onEntry:["deriveGameState"],on:{FINISH:{target:"idle",actions:["finishGame"]}}}}},nextBet:{states:{continue:{},stop:{}}}}}}};var Kt=V(Wt);const Ft={id:"betTab",initial:"idle",states:{idle:{onExit:["resetBetState"]},fetching:{on:{SUCCESS:{actions:["addBetToContext"],target:"play"}}},play:{onEntry:["deriveGameState"],on:{SKIP_ROUND:{target:"play",actions:["skipRound"]},FINISH:{target:"idle",actions:["finishGame"]}}}}};var qt=tt(Ft);const Jt={id:"slots",initial:"betTab",context:{bet:null,firstBet:null},states:{betTab:qt,autobetTab:Kt,advancedTab:{id:"advancedTab",states:{}}}},Qt=H(Jt,{actions:Dt,services:Ut}),Xt=U(Qt,{deferEvents:!0,devTools:!0}),ue=M({service:Xt,gameName:"slots",resetState:()=>{},tab:_,xstate:h});export{et as a,ce as b,T as c,x as d,rt as e,Xt as f,at as g,de as h,ue as i,j,p as l,m as r,b as s,_ as t,h as x};
